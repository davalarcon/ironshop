<h2>FILL OUT TO CREATE A NEW PRODUCT</h2>

<!-- <ul>
  for (let fieldName in validationErrors){
    <li> validationErrors[fieldName].message</li>
  }
</ul> -->

<form method="post" action="/products">
  <% if (typeof nameValidationErrors==='object') { %>
    <p class = 'error'> <%= nameValidationErrors.message %> </p>
  <% } %>
  <label for="product-name-input">Name of Product</label><br>
  <input id="product-name-input" type="text" name="productName">
                                             <!-- req.body.productName -->
  <br>

  <% if (typeof priceValidationErrors==='object') { %>
    <p class = 'error'> <%= priceValidationErrors.message %> </p>
  <% } %>
  <label for="product-price-input">Price:</label><br>
  <input id="product-price-input" type="number" step="0.01" name="productPrice">
                                                     <!-- req.body.productPrice -->
  <br>
  <label for="product-image-input">Image URL</label><br>
  <input id="product-image-input" type="url" name="productImageUrl">
                                            <!-- req.body.productImageUrl -->
  <br>
  <label for="product-description-input">Description</label><br>
  <textarea id="product-description-input" name="productDescription" rows="8" cols="80"></textarea>
                                         <!-- req.body.productDescription -->
  <br>
  <button>Add this Product</button>
</form>

<!-- for = needs to be the same as id = (its is mainly for user experience)
      action= is the route where you want all these info to go to.
      id = needs to be the same as for = (its is mainly for user experience)
      name =  what controls how we are going to get this info back-->
